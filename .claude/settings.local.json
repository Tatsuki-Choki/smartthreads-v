{
  "permissions": {
    "allow": [
      "Bash(npx create-next-app:*)",
      "Bash(mv:*)",
      "Bash(true)",
      "Bash(rmdir:*)",
      "mcp__serena__activate_project",
      "Bash(npx:*)",
      "Bash(mkdir:*)",
      "Bash(npm install)",
      "WebFetch(domain:github.com)",
      "Bash(claude mcp add filesystem -s user:*)",
      "Bash(claude mcp add supabase -s user:*)",
      "Bash(claude mcp add github -s user:*)",
      "Bash(claude mcp add fetch -s:*)",
      "Bash(npm install:*)",
      "Bash(claude mcp add playwright -s user:*)",
      "Bash(claude mcp add openapi -s user:*)",
      "Bash(claude mcp add git:*)",
      "Bash(npm run dev:*)",
      "Bash(claude mcp add:*)",
      "Bash(git init:*)",
      "Bash(git branch:*)",
      "Bash(git add:*)",
      "Bash(npx vercel:*)",
      "Bash(rm:*)",
      "Bash(npx supabase:*)",
      "WebFetch(domain:vercel.com)",
      "Bash(gh:*)",
      "Bash(git push:*)",
      "Bash(env)",
      "Bash(npx playwright install:*)",
      "Bash(claude mcp add playwright --npx '@playwright/mcp@latest')",
      "Bash(claude mcp add:*)",
      "Bash(mcp list:*)",
      "Bash(node:*)",
      "Bash(curl:*)",
      "Bash(lsof:*)",
      "Bash(pkill:*)",
      "Bash(npx playwright:*)",
      "Bash(touch:*)",
      "Bash(open http://localhost:3000)",
      "Bash(claude mcp:*)",
      "Bash(cat:*)",
      "Bash(open http://localhost:3000/dashboard)",
      "Bash(test:*)",
      "Bash(kill:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run lint)",
      "mcp__serena__search_for_pattern",
      "mcp__serena__find_file",
      "mcp__serena__list_dir",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__find_symbol",
      "mcp__serena__replace_regex",
      "Bash(PORT=3001 npm run dev)",
      "Bash(npm search:*)",
      "Bash(brew install:*)",
      "Bash(supabase init:*)",
      "Bash(supabase link:*)",
      "Bash(supabase login:*)",
      "Bash(export:*)",
      "Bash(supabase db execute:*)",
      "Bash(brew list:*)",
      "Bash(psql:*)",
      "Bash(tree:*)",
      "mcp__ide__executeCode",
      "mcp__filesystem__read_text_file",
      "mcp__filesystem__list_directory",
      "mcp__filesystem__read_multiple_files",
      "mcp__filesystem__search_files",
      "Bash(chmod:*)",
      "Bash(/opt/homebrew/bin/psql \"postgresql://postgres:Chouki0926!@localhost:54322/postgres\" -c \"\\d posts\")",
      "Bash(/opt/homebrew/opt/postgresql@16/bin/psql:*)",
      "Bash(supabase status:*)",
      "Bash(supabase start:*)",
      "mcp__filesystem__write_file",
      "mcp__filesystem__edit_file",
      "Bash(/opt/homebrew/bin/psql \"postgresql://postgres:postgres@localhost:54322/postgres\" -c \"\\dt\")",
      "Bash(supabase db reset:*)",
      "Bash(supabase db:*)",
      "Bash(/opt/homebrew/bin/psql \"postgresql://postgres:postgres@127.0.0.1:54322/postgres\" -c \"ALTER TABLE posts ADD COLUMN IF NOT EXISTS parent_post_id UUID REFERENCES posts(id), ADD COLUMN IF NOT EXISTS thread_root_id UUID REFERENCES posts(id), ADD COLUMN IF NOT EXISTS thread_position INTEGER DEFAULT 0;\")",
      "Bash(PGPASSWORD=postgres psql -h localhost -p 54322 -U postgres -d postgres -c \"\\d posts\")",
      "mcp__filesystem__create_directory",
      "mcp__serena__write_memory",
      "WebFetch(domain:smartthreads-v.vercel.app)",
      "Bash(git commit:*)",
      "Bash(grep:*)",
      "Bash(vercel env:*)",
      "mcp__secrets__sampleLLM",
      "Bash(vercel:*)"
    ],
    "deny": []
  }
}